//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var string: string { .init(bundle: bundle, preferredLanguages: nil, locale: nil) }
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func string(bundle: Foundation.Bundle) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: nil)
  }
  func string(locale: Foundation.Locale) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: locale)
  }
  func string(preferredLanguages: [String], locale: Locale? = nil) -> string {
    .init(bundle: bundle, preferredLanguages: preferredLanguages, locale: locale)
  }
  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "uk"
  }

  /// This `_R.string` struct is generated, and contains static references to 2 localization tables.
  struct string {
    let bundle: Foundation.Bundle
    let preferredLanguages: [String]?
    let locale: Locale?
    var infoPlist: infoPlist { .init(source: .init(bundle: bundle, tableName: "InfoPlist", preferredLanguages: preferredLanguages, locale: locale)) }
    var localizable: localizable { .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale)) }

    func infoPlist(preferredLanguages: [String]) -> infoPlist {
      .init(source: .init(bundle: bundle, tableName: "InfoPlist", preferredLanguages: preferredLanguages, locale: locale))
    }
    func localizable(preferredLanguages: [String]) -> localizable {
      .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale))
    }


    /// This `_R.string.infoPlist` struct is generated, and contains static references to 2 localization keys.
    struct infoPlist {
      let source: RswiftResources.StringResource.Source

      /// uk translation: Камера буде використовуватись для зйомки фото/відео
      ///
      /// Key: NSCameraUsageDescription
      ///
      /// Locales: uk, en-GB
      var nsCameraUsageDescription: RswiftResources.StringResource { .init(key: "NSCameraUsageDescription", tableName: "InfoPlist", source: source, developmentValue: "Камера буде використовуватись для зйомки фото/відео", comment: nil) }

      /// uk translation: Галерея необхідна для збереження фото
      ///
      /// Key: NSPhotoLibraryUsageDescription
      ///
      /// Locales: uk, en-GB
      var nsPhotoLibraryUsageDescription: RswiftResources.StringResource { .init(key: "NSPhotoLibraryUsageDescription", tableName: "InfoPlist", source: source, developmentValue: "Галерея необхідна для збереження фото", comment: nil) }
    }

    /// This `_R.string.localizable` struct is generated, and contains static references to 20 localization keys.
    struct localizable {
      let source: RswiftResources.StringResource.Source

      /// uk translation: Фото
      ///
      /// Key: camera_mode1
      ///
      /// Locales: uk, en-GB
      var camera_mode1: RswiftResources.StringResource { .init(key: "camera_mode1", tableName: "Localizable", source: source, developmentValue: "Фото", comment: nil) }

      /// uk translation: Відео
      ///
      /// Key: camera_mode2
      ///
      /// Locales: uk, en-GB
      var camera_mode2: RswiftResources.StringResource { .init(key: "camera_mode2", tableName: "Localizable", source: source, developmentValue: "Відео", comment: nil) }

      /// uk translation: Фотографію успішно збережено в галерею
      ///
      /// Key: camera_photo_success
      ///
      /// Locales: uk, en-GB
      var camera_photo_success: RswiftResources.StringResource { .init(key: "camera_photo_success", tableName: "Localizable", source: source, developmentValue: "Фотографію успішно збережено в галерею", comment: nil) }

      /// uk translation: Відео успішно збережено в галерею
      ///
      /// Key: camera_video_success
      ///
      /// Locales: uk, en-GB
      var camera_video_success: RswiftResources.StringResource { .init(key: "camera_video_success", tableName: "Localizable", source: source, developmentValue: "Відео успішно збережено в галерею", comment: nil) }

      /// uk translation: Дозволити
      ///
      /// Key: general_allow
      ///
      /// Locales: uk, en-GB
      var general_allow: RswiftResources.StringResource { .init(key: "general_allow", tableName: "Localizable", source: source, developmentValue: "Дозволити", comment: nil) }

      /// uk translation: Скасувати
      ///
      /// Key: general_cancel
      ///
      /// Locales: uk, en-GB
      var general_cancel: RswiftResources.StringResource { .init(key: "general_cancel", tableName: "Localizable", source: source, developmentValue: "Скасувати", comment: nil) }

      /// uk translation: Англійська
      ///
      /// Key: general_english
      ///
      /// Locales: uk, en-GB
      var general_english: RswiftResources.StringResource { .init(key: "general_english", tableName: "Localizable", source: source, developmentValue: "Англійська", comment: nil) }

      /// uk translation: Помилка
      ///
      /// Key: general_error
      ///
      /// Locales: uk, en-GB
      var general_error: RswiftResources.StringResource { .init(key: "general_error", tableName: "Localizable", source: source, developmentValue: "Помилка", comment: nil) }

      /// uk translation: Завантаження...
      ///
      /// Key: general_loading
      ///
      /// Locales: uk, en-GB
      var general_loading: RswiftResources.StringResource { .init(key: "general_loading", tableName: "Localizable", source: source, developmentValue: "Завантаження...", comment: nil) }

      /// uk translation: OK
      ///
      /// Key: general_ok
      ///
      /// Locales: uk, en-GB
      var general_ok: RswiftResources.StringResource { .init(key: "general_ok", tableName: "Localizable", source: source, developmentValue: "OK", comment: nil) }

      /// uk translation: Налаштування
      ///
      /// Key: general_settings
      ///
      /// Locales: uk, en-GB
      var general_settings: RswiftResources.StringResource { .init(key: "general_settings", tableName: "Localizable", source: source, developmentValue: "Налаштування", comment: nil) }

      /// uk translation: Успішно
      ///
      /// Key: general_success
      ///
      /// Locales: uk, en-GB
      var general_success: RswiftResources.StringResource { .init(key: "general_success", tableName: "Localizable", source: source, developmentValue: "Успішно", comment: nil) }

      /// uk translation: Українська
      ///
      /// Key: general_ukrainian
      ///
      /// Locales: uk, en-GB
      var general_ukrainian: RswiftResources.StringResource { .init(key: "general_ukrainian", tableName: "Localizable", source: source, developmentValue: "Українська", comment: nil) }

      /// uk translation: Несподівана помилка
      ///
      /// Key: general_unexpected_error
      ///
      /// Locales: uk, en-GB
      var general_unexpected_error: RswiftResources.StringResource { .init(key: "general_unexpected_error", tableName: "Localizable", source: source, developmentValue: "Несподівана помилка", comment: nil) }

      /// uk translation: Перейдіть до налаштувань, щоб надати доступ
      ///
      /// Key: launch_camera_denied_description
      ///
      /// Locales: uk, en-GB
      var launch_camera_denied_description: RswiftResources.StringResource { .init(key: "launch_camera_denied_description", tableName: "Localizable", source: source, developmentValue: "Перейдіть до налаштувань, щоб надати доступ", comment: nil) }

      /// uk translation: Немає доступу до камери
      ///
      /// Key: launch_camera_denied_title
      ///
      /// Locales: uk, en-GB
      var launch_camera_denied_title: RswiftResources.StringResource { .init(key: "launch_camera_denied_title", tableName: "Localizable", source: source, developmentValue: "Немає доступу до камери", comment: nil) }

      /// uk translation: Щоб почати, надайте додатку доступ до камери
      ///
      /// Key: launch_camera_permission_text
      ///
      /// Locales: uk, en-GB
      var launch_camera_permission_text: RswiftResources.StringResource { .init(key: "launch_camera_permission_text", tableName: "Localizable", source: source, developmentValue: "Щоб почати, надайте додатку доступ до камери", comment: nil) }

      /// uk translation: Перейдіть до налаштувань, щоб надати доступ
      ///
      /// Key: launch_library_denied_description
      ///
      /// Locales: uk, en-GB
      var launch_library_denied_description: RswiftResources.StringResource { .init(key: "launch_library_denied_description", tableName: "Localizable", source: source, developmentValue: "Перейдіть до налаштувань, щоб надати доступ", comment: nil) }

      /// uk translation: Немає доступу до галереї
      ///
      /// Key: launch_library_denied_title
      ///
      /// Locales: uk, en-GB
      var launch_library_denied_title: RswiftResources.StringResource { .init(key: "launch_library_denied_title", tableName: "Localizable", source: source, developmentValue: "Немає доступу до галереї", comment: nil) }

      /// uk translation: Надайте додатку доступ до галереї
      ///
      /// Key: launch_library_permission_text
      ///
      /// Locales: uk, en-GB
      var launch_library_permission_text: RswiftResources.StringResource { .init(key: "launch_library_permission_text", tableName: "Localizable", source: source, developmentValue: "Надайте додатку доступ до галереї", comment: nil) }
    }
  }

  /// This `_R.color` struct is generated, and contains static references to 6 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }

    /// Color `background`.
    var background: RswiftResources.ColorResource { .init(name: "background", path: [], bundle: bundle) }

    /// Color `border`.
    var border: RswiftResources.ColorResource { .init(name: "border", path: [], bundle: bundle) }

    /// Color `image`.
    var image: RswiftResources.ColorResource { .init(name: "image", path: [], bundle: bundle) }

    /// Color `link`.
    var link: RswiftResources.ColorResource { .init(name: "link", path: [], bundle: bundle) }

    /// Color `primaryText`.
    var primaryText: RswiftResources.ColorResource { .init(name: "primaryText", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 4 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `ic_arrow_left`.
    var ic_arrow_left: RswiftResources.ImageResource { .init(name: "ic_arrow_left", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_camera`.
    var ic_camera: RswiftResources.ImageResource { .init(name: "ic_camera", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_camera_stop`.
    var ic_camera_stop: RswiftResources.ImageResource { .init(name: "ic_camera_stop", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_camera_switch`.
    var ic_camera_switch: RswiftResources.ImageResource { .init(name: "ic_camera_switch", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 1 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {
        if UIKit.UIColor(named: "background", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'background' is used in storyboard 'LaunchScreen', but couldn't be loaded.") }
        if UIKit.UIColor(named: "primaryText", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'primaryText' is used in storyboard 'LaunchScreen', but couldn't be loaded.") }
      }
    }
  }
}